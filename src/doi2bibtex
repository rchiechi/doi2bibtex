#!/usr/bin/env python3

import opts
import util
import bibtex
import interact
from colorama import init, Fore, Style

# Setup colors
init(autoreset=True)

args = opts.getopts()
logger = util.getlogger('doi2bib', root=True, loglevel=args.loglevel)

logger.debug("Debug logging enabled.")

journals = util.loadabbreviations(args.database,
                                  custom=args.custom,
                                  refresh=args.refresh)

library = None
if args.bibtexfile:
    library = bibtex.read(args.bibtexfile)
    logger.debug(f"Parsed {len(library.entries)} from {args.bibtexfile}.")

dois = list(args.dois)
if args.fromfile:
    dois += util.doifinder(args.fromfile)
    logger.debug(dois)

added = 0
for doi in dois:
    result = util.doitobibtex(doi)
    if result:
        library.add(bibtex.read(result).entries)
        logger.debug(f"Added {doi} to library")
        added += 1

if library is not None:
    print(f"{Fore.YELLOW}Upadted library with {Style.BRIGHT}{added}{Style.NORMAL} DOIs.")
    if args.clean and journals:
        cleaner = bibtex.clean(library, journals)
        library = cleaner.clean()
        journals.update(cleaner.custom)
        util.updatecache(journals)
    elif args.clean:
        print(f"{Style.BRIGHT}{Fore.RED}No journals parsed, cannot clean.")
    if args.dedupe:
        library = bibtex.dedupe(library)
    if args.replace and args.fromfile:
        bibtex.replacedois(args.fromfile, library, args.citecmd, args.trim)
    if args.bibtexfile:
        if interact.ask(f"Save library to {args.bibtexfile}?"):
            bibtex.write(library, args.bibtexfile)
